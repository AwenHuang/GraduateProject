; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\專題\自建專案\自建專案\src\BulletSoftBody\btSoftBodyRigidBodyCollisionConfiguration.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_btNanMask DD	07f800001H
_btInfinityMask DD 07f800000H
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	push	esi
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	esi, esp
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR ___t$[ebp]
	add	ecx, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], ecx
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??0btPoolAllocator@@QAE@HH@Z			; btPoolAllocator::btPoolAllocator
PUBLIC	??_GbtPoolAllocator@@QAEPAXI@Z			; btPoolAllocator::`scalar deleting destructor'
PUBLIC	??$btMax@H@@YAABHABH0@Z				; btMax<int>
PUBLIC	?getElementSize@btPoolAllocator@@QBEHXZ		; btPoolAllocator::getElementSize
PUBLIC	??0SwappedCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@QAE@XZ ; btSoftBodyConcaveCollisionAlgorithm::SwappedCreateFunc::SwappedCreateFunc
PUBLIC	??0CreateFunc@btSoftBodyConcaveCollisionAlgorithm@@QAE@XZ ; btSoftBodyConcaveCollisionAlgorithm::CreateFunc::CreateFunc
PUBLIC	??0CreateFunc@btSoftRigidCollisionAlgorithm@@QAE@XZ ; btSoftRigidCollisionAlgorithm::CreateFunc::CreateFunc
PUBLIC	??0CreateFunc@btSoftSoftCollisionAlgorithm@@QAE@XZ ; btSoftSoftCollisionAlgorithm::CreateFunc::CreateFunc
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??_7btSoftBodyRigidBodyCollisionConfiguration@@6B@ ; btSoftBodyRigidBodyCollisionConfiguration::`vftable'
PUBLIC	??0btSoftBodyRigidBodyCollisionConfiguration@@QAE@ABUbtDefaultCollisionConstructionInfo@@@Z ; btSoftBodyRigidBodyCollisionConfiguration::btSoftBodyRigidBodyCollisionConfiguration
PUBLIC	?getPersistentManifoldPool@btDefaultCollisionConfiguration@@UAEPAVbtPoolAllocator@@XZ ; btDefaultCollisionConfiguration::getPersistentManifoldPool
PUBLIC	?getCollisionAlgorithmPool@btDefaultCollisionConfiguration@@UAEPAVbtPoolAllocator@@XZ ; btDefaultCollisionConfiguration::getCollisionAlgorithmPool
PUBLIC	?getCollisionAlgorithmCreateFunc@btSoftBodyRigidBodyCollisionConfiguration@@UAEPAUbtCollisionAlgorithmCreateFunc@@HH@Z ; btSoftBodyRigidBodyCollisionConfiguration::getCollisionAlgorithmCreateFunc
PUBLIC	?getSimplexSolver@btDefaultCollisionConfiguration@@UAEPAVbtVoronoiSimplexSolver@@XZ ; btDefaultCollisionConfiguration::getSimplexSolver
EXTRN	?btAlignedFreeInternal@@YAXPAX@Z:PROC		; btAlignedFreeInternal
EXTRN	?btAlignedAllocInternal@@YAPAXIH@Z:PROC		; btAlignedAllocInternal
EXTRN	??0btDefaultCollisionConfiguration@@QAE@ABUbtDefaultCollisionConstructionInfo@@@Z:PROC ; btDefaultCollisionConfiguration::btDefaultCollisionConfiguration
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	??_EbtSoftBodyRigidBodyCollisionConfiguration@@UAEPAXI@Z:PROC ; btSoftBodyRigidBodyCollisionConfiguration::`vector deleting destructor'
;	COMDAT ??_7btSoftBodyRigidBodyCollisionConfiguration@@6B@
; File d:\專題\自建專案\自建專案\src\bulletsoftbody\btsoftbodyrigidbodycollisionconfiguration.cpp
CONST	SEGMENT
??_7btSoftBodyRigidBodyCollisionConfiguration@@6B@ DD FLAT:??_EbtSoftBodyRigidBodyCollisionConfiguration@@UAEPAXI@Z ; btSoftBodyRigidBodyCollisionConfiguration::`vftable'
	DD	FLAT:?getPersistentManifoldPool@btDefaultCollisionConfiguration@@UAEPAVbtPoolAllocator@@XZ
	DD	FLAT:?getCollisionAlgorithmPool@btDefaultCollisionConfiguration@@UAEPAVbtPoolAllocator@@XZ
	DD	FLAT:?getCollisionAlgorithmCreateFunc@btSoftBodyRigidBodyCollisionConfiguration@@UAEPAUbtCollisionAlgorithmCreateFunc@@HH@Z
	DD	FLAT:?getSimplexSolver@btDefaultCollisionConfiguration@@UAEPAVbtVoronoiSimplexSolver@@XZ
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0btSoftBodyRigidBodyCollisionConfiguration@@QAE@ABUbtDefaultCollisionConstructionInfo@@@Z
_TEXT	SEGMENT
tv249 = -112						; size = 4
tv188 = -108						; size = 4
tv173 = -104						; size = 4
tv156 = -100						; size = 4
tv141 = -96						; size = 4
tv94 = -92						; size = 4
$T14040 = -88						; size = 4
$T14037 = -84						; size = 4
$T14034 = -80						; size = 4
$T14031 = -76						; size = 4
$T14028 = -72						; size = 4
$T14025 = -68						; size = 4
_mem$13444 = -64					; size = 4
_collisionAlgorithmMaxElementSize$13437 = -56		; size = 4
_maxSize2$13435 = -44					; size = 4
_maxSize1$13433 = -32					; size = 4
_maxSize0$13431 = -20					; size = 4
_curElemSize$13430 = -12				; size = 4
_mem$ = -8						; size = 4
_this$ = -4						; size = 4
_constructionInfo$ = 8					; size = 4
??0btSoftBodyRigidBodyCollisionConfiguration@@QAE@ABUbtDefaultCollisionConstructionInfo@@@Z PROC ; btSoftBodyRigidBodyCollisionConfiguration::btSoftBodyRigidBodyCollisionConfiguration, COMDAT
; _this$ = ecx
; Line 27
	push	ebp
	mov	ebp, esp
	sub	esp, 112				; 00000070H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-112]
	mov	ecx, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _constructionInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0btDefaultCollisionConfiguration@@QAE@ABUbtDefaultCollisionConstructionInfo@@@Z ; btDefaultCollisionConfiguration::btDefaultCollisionConfiguration
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7btSoftBodyRigidBodyCollisionConfiguration@@6B@
; Line 30
	push	16					; 00000010H
	push	8
	call	?btAlignedAllocInternal@@YAPAXIH@Z	; btAlignedAllocInternal
	add	esp, 8
	mov	DWORD PTR _mem$[ebp], eax
; Line 31
	mov	edx, DWORD PTR _mem$[ebp]
	push	edx
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T14025[ebp], eax
	cmp	DWORD PTR $T14025[ebp], 0
	je	SHORT $LN5@btSoftBody
	mov	ecx, DWORD PTR $T14025[ebp]
	call	??0CreateFunc@btSoftSoftCollisionAlgorithm@@QAE@XZ
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN6@btSoftBody
$LN5@btSoftBody:
	mov	DWORD PTR tv94[ebp], 0
$LN6@btSoftBody:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv94[ebp]
	mov	DWORD PTR [eax+92], ecx
; Line 33
	push	16					; 00000010H
	push	8
	call	?btAlignedAllocInternal@@YAPAXIH@Z	; btAlignedAllocInternal
	add	esp, 8
	mov	DWORD PTR _mem$[ebp], eax
; Line 34
	mov	edx, DWORD PTR _mem$[ebp]
	push	edx
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T14028[ebp], eax
	cmp	DWORD PTR $T14028[ebp], 0
	je	SHORT $LN7@btSoftBody
	mov	ecx, DWORD PTR $T14028[ebp]
	call	??0CreateFunc@btSoftRigidCollisionAlgorithm@@QAE@XZ
	mov	DWORD PTR tv141[ebp], eax
	jmp	SHORT $LN8@btSoftBody
$LN7@btSoftBody:
	mov	DWORD PTR tv141[ebp], 0
$LN8@btSoftBody:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv141[ebp]
	mov	DWORD PTR [eax+96], ecx
; Line 36
	push	16					; 00000010H
	push	8
	call	?btAlignedAllocInternal@@YAPAXIH@Z	; btAlignedAllocInternal
	add	esp, 8
	mov	DWORD PTR _mem$[ebp], eax
; Line 37
	mov	edx, DWORD PTR _mem$[ebp]
	push	edx
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T14031[ebp], eax
	cmp	DWORD PTR $T14031[ebp], 0
	je	SHORT $LN9@btSoftBody
	mov	ecx, DWORD PTR $T14031[ebp]
	call	??0CreateFunc@btSoftRigidCollisionAlgorithm@@QAE@XZ
	mov	DWORD PTR tv156[ebp], eax
	jmp	SHORT $LN10@btSoftBody
$LN9@btSoftBody:
	mov	DWORD PTR tv156[ebp], 0
$LN10@btSoftBody:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv156[ebp]
	mov	DWORD PTR [eax+100], ecx
; Line 38
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	mov	BYTE PTR [eax+4], 1
; Line 41
	push	16					; 00000010H
	push	8
	call	?btAlignedAllocInternal@@YAPAXIH@Z	; btAlignedAllocInternal
	add	esp, 8
	mov	DWORD PTR _mem$[ebp], eax
; Line 42
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T14034[ebp], eax
	cmp	DWORD PTR $T14034[ebp], 0
	je	SHORT $LN11@btSoftBody
	mov	ecx, DWORD PTR $T14034[ebp]
	call	??0CreateFunc@btSoftBodyConcaveCollisionAlgorithm@@QAE@XZ
	mov	DWORD PTR tv173[ebp], eax
	jmp	SHORT $LN12@btSoftBody
$LN11@btSoftBody:
	mov	DWORD PTR tv173[ebp], 0
$LN12@btSoftBody:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv173[ebp]
	mov	DWORD PTR [edx+104], eax
; Line 44
	push	16					; 00000010H
	push	8
	call	?btAlignedAllocInternal@@YAPAXIH@Z	; btAlignedAllocInternal
	add	esp, 8
	mov	DWORD PTR _mem$[ebp], eax
; Line 45
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T14037[ebp], eax
	cmp	DWORD PTR $T14037[ebp], 0
	je	SHORT $LN13@btSoftBody
	mov	ecx, DWORD PTR $T14037[ebp]
	call	??0SwappedCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@QAE@XZ
	mov	DWORD PTR tv188[ebp], eax
	jmp	SHORT $LN14@btSoftBody
$LN13@btSoftBody:
	mov	DWORD PTR tv188[ebp], 0
$LN14@btSoftBody:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv188[ebp]
	mov	DWORD PTR [edx+108], eax
; Line 46
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	BYTE PTR [edx+4], 1
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+20]
	test	ecx, ecx
	je	$LN3@btSoftBody
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	$LN3@btSoftBody
; Line 53
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	?getElementSize@btPoolAllocator@@QBEHXZ	; btPoolAllocator::getElementSize
	mov	DWORD PTR _curElemSize$13430[ebp], eax
; Line 57
	mov	DWORD PTR _maxSize0$13431[ebp], 24	; 00000018H
; Line 58
	mov	DWORD PTR _maxSize1$13433[ebp], 20	; 00000014H
; Line 59
	mov	DWORD PTR _maxSize2$13435[ebp], 176	; 000000b0H
; Line 61
	lea	ecx, DWORD PTR _maxSize1$13433[ebp]
	push	ecx
	lea	edx, DWORD PTR _maxSize0$13431[ebp]
	push	edx
	call	??$btMax@H@@YAABHABH0@Z			; btMax<int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _collisionAlgorithmMaxElementSize$13437[ebp], eax
; Line 62
	lea	ecx, DWORD PTR _maxSize2$13435[ebp]
	push	ecx
	lea	edx, DWORD PTR _collisionAlgorithmMaxElementSize$13437[ebp]
	push	edx
	call	??$btMax@H@@YAABHABH0@Z			; btMax<int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _collisionAlgorithmMaxElementSize$13437[ebp], eax
; Line 64
	mov	ecx, DWORD PTR _collisionAlgorithmMaxElementSize$13437[ebp]
	cmp	ecx, DWORD PTR _curElemSize$13430[ebp]
	jle	SHORT $LN3@btSoftBody
; Line 66
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	??_GbtPoolAllocator@@QAEPAXI@Z
; Line 67
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	?btAlignedFreeInternal@@YAXPAX@Z	; btAlignedFreeInternal
	add	esp, 4
; Line 68
	push	16					; 00000010H
	push	20					; 00000014H
	call	?btAlignedAllocInternal@@YAPAXIH@Z	; btAlignedAllocInternal
	add	esp, 8
	mov	DWORD PTR _mem$13444[ebp], eax
; Line 69
	mov	edx, DWORD PTR _mem$13444[ebp]
	push	edx
	push	20					; 00000014H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T14040[ebp], eax
	cmp	DWORD PTR $T14040[ebp], 0
	je	SHORT $LN15@btSoftBody
	mov	eax, DWORD PTR _constructionInfo$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _collisionAlgorithmMaxElementSize$13437[ebp]
	push	edx
	mov	ecx, DWORD PTR $T14040[ebp]
	call	??0btPoolAllocator@@QAE@HH@Z		; btPoolAllocator::btPoolAllocator
	mov	DWORD PTR tv249[ebp], eax
	jmp	SHORT $LN16@btSoftBody
$LN15@btSoftBody:
	mov	DWORD PTR tv249[ebp], 0
$LN16@btSoftBody:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv249[ebp]
	mov	DWORD PTR [eax+16], ecx
$LN3@btSoftBody:
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@btSoftBody
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 112				; 00000070H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN22@btSoftBody:
	DD	4
	DD	$LN21@btSoftBody
$LN21@btSoftBody:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN17@btSoftBody
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN18@btSoftBody
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN19@btSoftBody
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN20@btSoftBody
$LN20@btSoftBody:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	103					; 00000067H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	109					; 0000006dH
	DB	77					; 0000004dH
	DB	97					; 00000061H
	DB	120					; 00000078H
	DB	69					; 00000045H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN19@btSoftBody:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	120					; 00000078H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	50					; 00000032H
	DB	0
$LN18@btSoftBody:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	120					; 00000078H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	49					; 00000031H
	DB	0
$LN17@btSoftBody:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	120					; 00000078H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	48					; 00000030H
	DB	0
??0btSoftBodyRigidBodyCollisionConfiguration@@QAE@ABUbtDefaultCollisionConstructionInfo@@@Z ENDP ; btSoftBodyRigidBodyCollisionConfiguration::btSoftBodyRigidBodyCollisionConfiguration
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?getPersistentManifoldPool@btDefaultCollisionConfiguration@@UAEPAVbtPoolAllocator@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getPersistentManifoldPool@btDefaultCollisionConfiguration@@UAEPAVbtPoolAllocator@@XZ PROC ; btDefaultCollisionConfiguration::getPersistentManifoldPool, COMDAT
; _this$ = ecx
; File d:\專題\自建專案\自建專案\src\bulletcollision\collisiondispatch\btdefaultcollisionconfiguration.h
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 96
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 97
	mov	esp, ebp
	pop	ebp
	ret	0
?getPersistentManifoldPool@btDefaultCollisionConfiguration@@UAEPAVbtPoolAllocator@@XZ ENDP ; btDefaultCollisionConfiguration::getPersistentManifoldPool
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?getCollisionAlgorithmPool@btDefaultCollisionConfiguration@@UAEPAVbtPoolAllocator@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getCollisionAlgorithmPool@btDefaultCollisionConfiguration@@UAEPAVbtPoolAllocator@@XZ PROC ; btDefaultCollisionConfiguration::getCollisionAlgorithmPool, COMDAT
; _this$ = ecx
; Line 100
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 101
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
; Line 102
	mov	esp, ebp
	pop	ebp
	ret	0
?getCollisionAlgorithmPool@btDefaultCollisionConfiguration@@UAEPAVbtPoolAllocator@@XZ ENDP ; btDefaultCollisionConfiguration::getCollisionAlgorithmPool
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?getSimplexSolver@btDefaultCollisionConfiguration@@UAEPAVbtVoronoiSimplexSolver@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getSimplexSolver@btDefaultCollisionConfiguration@@UAEPAVbtVoronoiSimplexSolver@@XZ PROC ; btDefaultCollisionConfiguration::getSimplexSolver, COMDAT
; _this$ = ecx
; Line 106
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 107
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
; Line 108
	mov	esp, ebp
	pop	ebp
	ret	0
?getSimplexSolver@btDefaultCollisionConfiguration@@UAEPAVbtVoronoiSimplexSolver@@XZ ENDP ; btDefaultCollisionConfiguration::getSimplexSolver
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
; Line 56
	push	ebp
	mov	ebp, esp
; Line 57
	mov	eax, DWORD PTR __Where$[ebp]
; Line 58
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0btPoolAllocator@@QAE@HH@Z
_TEXT	SEGMENT
_count$ = -12						; size = 4
_p$ = -8						; size = 4
_this$ = -4						; size = 4
_elemSize$ = 8						; size = 4
_maxElements$ = 12					; size = 4
??0btPoolAllocator@@QAE@HH@Z PROC			; btPoolAllocator::btPoolAllocator, COMDAT
; _this$ = ecx
; File d:\專題\自建專案\自建專案\src\linearmath\btpoolallocator.h
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _elemSize$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _maxElements$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 37
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	imul	eax, DWORD PTR [edx+4]
	push	eax
	call	?btAlignedAllocInternal@@YAPAXIH@Z	; btAlignedAllocInternal
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 39
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR _p$[ebp], eax
; Line 40
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+12], edx
; Line 41
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+8], edx
; Line 42
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _count$[ebp], ecx
$LN2@btPoolAllo:
; Line 43
	mov	edx, DWORD PTR _count$[ebp]
	sub	edx, 1
	mov	DWORD PTR _count$[ebp], edx
	je	SHORT $LN1@btPoolAllo
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p$[ebp], ecx
; Line 46
	jmp	SHORT $LN2@btPoolAllo
$LN1@btPoolAllo:
; Line 47
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], 0
; Line 48
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0btPoolAllocator@@QAE@HH@Z ENDP			; btPoolAllocator::btPoolAllocator
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?getElementSize@btPoolAllocator@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getElementSize@btPoolAllocator@@QBEHXZ PROC		; btPoolAllocator::getElementSize, COMDAT
; _this$ = ecx
; Line 105
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 106
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 107
	mov	esp, ebp
	pop	ebp
	ret	0
?getElementSize@btPoolAllocator@@QBEHXZ ENDP		; btPoolAllocator::getElementSize
_TEXT	ENDS
PUBLIC	??1btSoftBodyRigidBodyCollisionConfiguration@@UAE@XZ ; btSoftBodyRigidBodyCollisionConfiguration::~btSoftBodyRigidBodyCollisionConfiguration
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GbtSoftBodyRigidBodyCollisionConfiguration@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GbtSoftBodyRigidBodyCollisionConfiguration@@UAEPAXI@Z PROC ; btSoftBodyRigidBodyCollisionConfiguration::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1btSoftBodyRigidBodyCollisionConfiguration@@UAE@XZ ; btSoftBodyRigidBodyCollisionConfiguration::~btSoftBodyRigidBodyCollisionConfiguration
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GbtSoftBodyRigidBodyCollisionConfiguration@@UAEPAXI@Z ENDP ; btSoftBodyRigidBodyCollisionConfiguration::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7CreateFunc@btSoftSoftCollisionAlgorithm@@6B@ ; btSoftSoftCollisionAlgorithm::CreateFunc::`vftable'
PUBLIC	??0btCollisionAlgorithmCreateFunc@@QAE@XZ	; btCollisionAlgorithmCreateFunc::btCollisionAlgorithmCreateFunc
PUBLIC	?CreateCollisionAlgorithm@CreateFunc@btSoftSoftCollisionAlgorithm@@UAEPAVbtCollisionAlgorithm@@AAUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1@Z ; btSoftSoftCollisionAlgorithm::CreateFunc::CreateCollisionAlgorithm
EXTRN	??_ECreateFunc@btSoftSoftCollisionAlgorithm@@UAEPAXI@Z:PROC ; btSoftSoftCollisionAlgorithm::CreateFunc::`vector deleting destructor'
;	COMDAT ??_7CreateFunc@btSoftSoftCollisionAlgorithm@@6B@
CONST	SEGMENT
??_7CreateFunc@btSoftSoftCollisionAlgorithm@@6B@ DD FLAT:??_ECreateFunc@btSoftSoftCollisionAlgorithm@@UAEPAXI@Z ; btSoftSoftCollisionAlgorithm::CreateFunc::`vftable'
	DD	FLAT:?CreateCollisionAlgorithm@CreateFunc@btSoftSoftCollisionAlgorithm@@UAEPAVbtCollisionAlgorithm@@AAUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0CreateFunc@btSoftSoftCollisionAlgorithm@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CreateFunc@btSoftSoftCollisionAlgorithm@@QAE@XZ PROC	; btSoftSoftCollisionAlgorithm::CreateFunc::CreateFunc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0btCollisionAlgorithmCreateFunc@@QAE@XZ ; btCollisionAlgorithmCreateFunc::btCollisionAlgorithmCreateFunc
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CreateFunc@btSoftSoftCollisionAlgorithm@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CreateFunc@btSoftSoftCollisionAlgorithm@@QAE@XZ ENDP	; btSoftSoftCollisionAlgorithm::CreateFunc::CreateFunc
_TEXT	ENDS
PUBLIC	??_7btCollisionAlgorithmCreateFunc@@6B@		; btCollisionAlgorithmCreateFunc::`vftable'
PUBLIC	?CreateCollisionAlgorithm@btCollisionAlgorithmCreateFunc@@UAEPAVbtCollisionAlgorithm@@AAUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1@Z ; btCollisionAlgorithmCreateFunc::CreateCollisionAlgorithm
EXTRN	??_EbtCollisionAlgorithmCreateFunc@@UAEPAXI@Z:PROC ; btCollisionAlgorithmCreateFunc::`vector deleting destructor'
;	COMDAT ??_7btCollisionAlgorithmCreateFunc@@6B@
; File d:\專題\自建專案\自建專案\src\bulletcollision\collisiondispatch\btcollisioncreatefunc.h
CONST	SEGMENT
??_7btCollisionAlgorithmCreateFunc@@6B@ DD FLAT:??_EbtCollisionAlgorithmCreateFunc@@UAEPAXI@Z ; btCollisionAlgorithmCreateFunc::`vftable'
	DD	FLAT:?CreateCollisionAlgorithm@btCollisionAlgorithmCreateFunc@@UAEPAVbtCollisionAlgorithm@@AAUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0btCollisionAlgorithmCreateFunc@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0btCollisionAlgorithmCreateFunc@@QAE@XZ PROC		; btCollisionAlgorithmCreateFunc::btCollisionAlgorithmCreateFunc, COMDAT
; _this$ = ecx
; Line 32
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7btCollisionAlgorithmCreateFunc@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+4], 0
; Line 33
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0btCollisionAlgorithmCreateFunc@@QAE@XZ ENDP		; btCollisionAlgorithmCreateFunc::btCollisionAlgorithmCreateFunc
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?CreateCollisionAlgorithm@btCollisionAlgorithmCreateFunc@@UAEPAVbtCollisionAlgorithm@@AAUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
_body0Wrap$ = 12					; size = 4
_body1Wrap$ = 16					; size = 4
?CreateCollisionAlgorithm@btCollisionAlgorithmCreateFunc@@UAEPAVbtCollisionAlgorithm@@AAUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1@Z PROC ; btCollisionAlgorithmCreateFunc::CreateCollisionAlgorithm, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 41
	xor	eax, eax
; Line 42
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?CreateCollisionAlgorithm@btCollisionAlgorithmCreateFunc@@UAEPAVbtCollisionAlgorithm@@AAUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1@Z ENDP ; btCollisionAlgorithmCreateFunc::CreateCollisionAlgorithm
_TEXT	ENDS
PUBLIC	??1btCollisionAlgorithmCreateFunc@@UAE@XZ	; btCollisionAlgorithmCreateFunc::~btCollisionAlgorithmCreateFunc
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GbtCollisionAlgorithmCreateFunc@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GbtCollisionAlgorithmCreateFunc@@UAEPAXI@Z PROC	; btCollisionAlgorithmCreateFunc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1btCollisionAlgorithmCreateFunc@@UAE@XZ ; btCollisionAlgorithmCreateFunc::~btCollisionAlgorithmCreateFunc
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GbtCollisionAlgorithmCreateFunc@@UAEPAXI@Z ENDP	; btCollisionAlgorithmCreateFunc::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1btCollisionAlgorithmCreateFunc@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1btCollisionAlgorithmCreateFunc@@UAE@XZ PROC		; btCollisionAlgorithmCreateFunc::~btCollisionAlgorithmCreateFunc, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7btCollisionAlgorithmCreateFunc@@6B@
	mov	esp, ebp
	pop	ebp
	ret	0
??1btCollisionAlgorithmCreateFunc@@UAE@XZ ENDP		; btCollisionAlgorithmCreateFunc::~btCollisionAlgorithmCreateFunc
_TEXT	ENDS
EXTRN	??0btSoftSoftCollisionAlgorithm@@QAE@PAVbtPersistentManifold@@ABUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@2@Z:PROC ; btSoftSoftCollisionAlgorithm::btSoftSoftCollisionAlgorithm
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CreateCollisionAlgorithm@CreateFunc@btSoftSoftCollisionAlgorithm@@UAEPAVbtCollisionAlgorithm@@AAUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1@Z
_TEXT	SEGMENT
tv84 = -20						; size = 4
$T14076 = -16						; size = 4
_ptr$ = -12						; size = 4
_bbsize$ = -8						; size = 4
_this$ = -4						; size = 4
_ci$ = 8						; size = 4
_body0Wrap$ = 12					; size = 4
_body1Wrap$ = 16					; size = 4
?CreateCollisionAlgorithm@CreateFunc@btSoftSoftCollisionAlgorithm@@UAEPAVbtCollisionAlgorithm@@AAUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1@Z PROC ; btSoftSoftCollisionAlgorithm::CreateFunc::CreateCollisionAlgorithm, COMDAT
; _this$ = ecx
; File d:\專題\自建專案\自建專案\src\bulletsoftbody\btsoftsoftcollisionalgorithm.h
; Line 58
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 59
	mov	DWORD PTR _bbsize$[ebp], 24		; 00000018H
; Line 60
	mov	esi, esp
	mov	eax, DWORD PTR _bbsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ci$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _ci$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ptr$[ebp], eax
; Line 61
	mov	ecx, DWORD PTR _ptr$[ebp]
	push	ecx
	push	24					; 00000018H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T14076[ebp], eax
	cmp	DWORD PTR $T14076[ebp], 0
	je	SHORT $LN3@CreateColl
	mov	edx, DWORD PTR _body1Wrap$[ebp]
	push	edx
	mov	eax, DWORD PTR _body0Wrap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ci$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR $T14076[ebp]
	call	??0btSoftSoftCollisionAlgorithm@@QAE@PAVbtPersistentManifold@@ABUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@2@Z ; btSoftSoftCollisionAlgorithm::btSoftSoftCollisionAlgorithm
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN4@CreateColl
$LN3@CreateColl:
	mov	DWORD PTR tv84[ebp], 0
$LN4@CreateColl:
	mov	eax, DWORD PTR tv84[ebp]
; Line 62
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?CreateCollisionAlgorithm@CreateFunc@btSoftSoftCollisionAlgorithm@@UAEPAVbtCollisionAlgorithm@@AAUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1@Z ENDP ; btSoftSoftCollisionAlgorithm::CreateFunc::CreateCollisionAlgorithm
_TEXT	ENDS
PUBLIC	??_7CreateFunc@btSoftRigidCollisionAlgorithm@@6B@ ; btSoftRigidCollisionAlgorithm::CreateFunc::`vftable'
PUBLIC	?CreateCollisionAlgorithm@CreateFunc@btSoftRigidCollisionAlgorithm@@UAEPAVbtCollisionAlgorithm@@AAUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1@Z ; btSoftRigidCollisionAlgorithm::CreateFunc::CreateCollisionAlgorithm
EXTRN	??_ECreateFunc@btSoftRigidCollisionAlgorithm@@UAEPAXI@Z:PROC ; btSoftRigidCollisionAlgorithm::CreateFunc::`vector deleting destructor'
;	COMDAT ??_7CreateFunc@btSoftRigidCollisionAlgorithm@@6B@
CONST	SEGMENT
??_7CreateFunc@btSoftRigidCollisionAlgorithm@@6B@ DD FLAT:??_ECreateFunc@btSoftRigidCollisionAlgorithm@@UAEPAXI@Z ; btSoftRigidCollisionAlgorithm::CreateFunc::`vftable'
	DD	FLAT:?CreateCollisionAlgorithm@CreateFunc@btSoftRigidCollisionAlgorithm@@UAEPAVbtCollisionAlgorithm@@AAUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0CreateFunc@btSoftRigidCollisionAlgorithm@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CreateFunc@btSoftRigidCollisionAlgorithm@@QAE@XZ PROC ; btSoftRigidCollisionAlgorithm::CreateFunc::CreateFunc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0btCollisionAlgorithmCreateFunc@@QAE@XZ ; btCollisionAlgorithmCreateFunc::btCollisionAlgorithmCreateFunc
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CreateFunc@btSoftRigidCollisionAlgorithm@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CreateFunc@btSoftRigidCollisionAlgorithm@@QAE@XZ ENDP ; btSoftRigidCollisionAlgorithm::CreateFunc::CreateFunc
_TEXT	ENDS
EXTRN	??0btSoftRigidCollisionAlgorithm@@QAE@PAVbtPersistentManifold@@ABUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@2_N@Z:PROC ; btSoftRigidCollisionAlgorithm::btSoftRigidCollisionAlgorithm
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CreateCollisionAlgorithm@CreateFunc@btSoftRigidCollisionAlgorithm@@UAEPAVbtCollisionAlgorithm@@AAUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1@Z
_TEXT	SEGMENT
tv140 = -24						; size = 4
tv92 = -20						; size = 4
$T14086 = -16						; size = 4
$T14083 = -12						; size = 4
_mem$ = -8						; size = 4
_this$ = -4						; size = 4
_ci$ = 8						; size = 4
_body0Wrap$ = 12					; size = 4
_body1Wrap$ = 16					; size = 4
?CreateCollisionAlgorithm@CreateFunc@btSoftRigidCollisionAlgorithm@@UAEPAVbtCollisionAlgorithm@@AAUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1@Z PROC ; btSoftRigidCollisionAlgorithm::CreateFunc::CreateCollisionAlgorithm, COMDAT
; _this$ = ecx
; File d:\專題\自建專案\自建專案\src\bulletsoftbody\btsoftrigidcollisionalgorithm.h
; Line 59
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 60
	mov	esi, esp
	push	20					; 00000014H
	mov	eax, DWORD PTR _ci$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _ci$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _mem$[ebp], eax
; Line 61
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+4]
	test	edx, edx
	jne	SHORT $LN2@CreateColl@2
; Line 63
	mov	eax, DWORD PTR _mem$[ebp]
	push	eax
	push	20					; 00000014H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T14083[ebp], eax
	cmp	DWORD PTR $T14083[ebp], 0
	je	SHORT $LN5@CreateColl@2
	push	0
	mov	ecx, DWORD PTR _body1Wrap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _body0Wrap$[ebp]
	push	edx
	mov	eax, DWORD PTR _ci$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR $T14083[ebp]
	call	??0btSoftRigidCollisionAlgorithm@@QAE@PAVbtPersistentManifold@@ABUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@2_N@Z ; btSoftRigidCollisionAlgorithm::btSoftRigidCollisionAlgorithm
	mov	DWORD PTR tv92[ebp], eax
	jmp	SHORT $LN6@CreateColl@2
$LN5@CreateColl@2:
	mov	DWORD PTR tv92[ebp], 0
$LN6@CreateColl@2:
	mov	eax, DWORD PTR tv92[ebp]
	jmp	SHORT $LN3@CreateColl@2
; Line 64
	jmp	SHORT $LN3@CreateColl@2
$LN2@CreateColl@2:
; Line 66
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	push	20					; 00000014H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T14086[ebp], eax
	cmp	DWORD PTR $T14086[ebp], 0
	je	SHORT $LN7@CreateColl@2
	push	1
	mov	edx, DWORD PTR _body1Wrap$[ebp]
	push	edx
	mov	eax, DWORD PTR _body0Wrap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ci$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR $T14086[ebp]
	call	??0btSoftRigidCollisionAlgorithm@@QAE@PAVbtPersistentManifold@@ABUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@2_N@Z ; btSoftRigidCollisionAlgorithm::btSoftRigidCollisionAlgorithm
	mov	DWORD PTR tv140[ebp], eax
	jmp	SHORT $LN8@CreateColl@2
$LN7@CreateColl@2:
	mov	DWORD PTR tv140[ebp], 0
$LN8@CreateColl@2:
	mov	eax, DWORD PTR tv140[ebp]
$LN3@CreateColl@2:
; Line 68
	pop	esi
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?CreateCollisionAlgorithm@CreateFunc@btSoftRigidCollisionAlgorithm@@UAEPAVbtCollisionAlgorithm@@AAUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1@Z ENDP ; btSoftRigidCollisionAlgorithm::CreateFunc::CreateCollisionAlgorithm
_TEXT	ENDS
PUBLIC	??_7CreateFunc@btSoftBodyConcaveCollisionAlgorithm@@6B@ ; btSoftBodyConcaveCollisionAlgorithm::CreateFunc::`vftable'
PUBLIC	?CreateCollisionAlgorithm@CreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAEPAVbtCollisionAlgorithm@@AAUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1@Z ; btSoftBodyConcaveCollisionAlgorithm::CreateFunc::CreateCollisionAlgorithm
EXTRN	??_ECreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAEPAXI@Z:PROC ; btSoftBodyConcaveCollisionAlgorithm::CreateFunc::`vector deleting destructor'
;	COMDAT ??_7CreateFunc@btSoftBodyConcaveCollisionAlgorithm@@6B@
CONST	SEGMENT
??_7CreateFunc@btSoftBodyConcaveCollisionAlgorithm@@6B@ DD FLAT:??_ECreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAEPAXI@Z ; btSoftBodyConcaveCollisionAlgorithm::CreateFunc::`vftable'
	DD	FLAT:?CreateCollisionAlgorithm@CreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAEPAVbtCollisionAlgorithm@@AAUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0CreateFunc@btSoftBodyConcaveCollisionAlgorithm@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CreateFunc@btSoftBodyConcaveCollisionAlgorithm@@QAE@XZ PROC ; btSoftBodyConcaveCollisionAlgorithm::CreateFunc::CreateFunc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0btCollisionAlgorithmCreateFunc@@QAE@XZ ; btCollisionAlgorithmCreateFunc::btCollisionAlgorithmCreateFunc
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CreateFunc@btSoftBodyConcaveCollisionAlgorithm@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CreateFunc@btSoftBodyConcaveCollisionAlgorithm@@QAE@XZ ENDP ; btSoftBodyConcaveCollisionAlgorithm::CreateFunc::CreateFunc
_TEXT	ENDS
EXTRN	??0btSoftBodyConcaveCollisionAlgorithm@@QAE@ABUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1_N@Z:PROC ; btSoftBodyConcaveCollisionAlgorithm::btSoftBodyConcaveCollisionAlgorithm
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CreateCollisionAlgorithm@CreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAEPAVbtCollisionAlgorithm@@AAUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1@Z
_TEXT	SEGMENT
tv84 = -16						; size = 4
$T14093 = -12						; size = 4
_mem$ = -8						; size = 4
_this$ = -4						; size = 4
_ci$ = 8						; size = 4
_body0Wrap$ = 12					; size = 4
_body1Wrap$ = 16					; size = 4
?CreateCollisionAlgorithm@CreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAEPAVbtCollisionAlgorithm@@AAUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1@Z PROC ; btSoftBodyConcaveCollisionAlgorithm::CreateFunc::CreateCollisionAlgorithm, COMDAT
; _this$ = ecx
; File d:\專題\自建專案\自建專案\src\bulletsoftbody\btsoftbodyconcavecollisionalgorithm.h
; Line 138
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 139
	mov	esi, esp
	push	176					; 000000b0H
	mov	eax, DWORD PTR _ci$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _ci$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _mem$[ebp], eax
; Line 140
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	push	176					; 000000b0H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T14093[ebp], eax
	cmp	DWORD PTR $T14093[ebp], 0
	je	SHORT $LN3@CreateColl@3
	push	0
	mov	edx, DWORD PTR _body1Wrap$[ebp]
	push	edx
	mov	eax, DWORD PTR _body0Wrap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ci$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T14093[ebp]
	call	??0btSoftBodyConcaveCollisionAlgorithm@@QAE@ABUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1_N@Z ; btSoftBodyConcaveCollisionAlgorithm::btSoftBodyConcaveCollisionAlgorithm
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN4@CreateColl@3
$LN3@CreateColl@3:
	mov	DWORD PTR tv84[ebp], 0
$LN4@CreateColl@3:
	mov	eax, DWORD PTR tv84[ebp]
; Line 141
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?CreateCollisionAlgorithm@CreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAEPAVbtCollisionAlgorithm@@AAUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1@Z ENDP ; btSoftBodyConcaveCollisionAlgorithm::CreateFunc::CreateCollisionAlgorithm
_TEXT	ENDS
PUBLIC	??_7SwappedCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@6B@ ; btSoftBodyConcaveCollisionAlgorithm::SwappedCreateFunc::`vftable'
PUBLIC	?CreateCollisionAlgorithm@SwappedCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAEPAVbtCollisionAlgorithm@@AAUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1@Z ; btSoftBodyConcaveCollisionAlgorithm::SwappedCreateFunc::CreateCollisionAlgorithm
EXTRN	??_ESwappedCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAEPAXI@Z:PROC ; btSoftBodyConcaveCollisionAlgorithm::SwappedCreateFunc::`vector deleting destructor'
;	COMDAT ??_7SwappedCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@6B@
CONST	SEGMENT
??_7SwappedCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@6B@ DD FLAT:??_ESwappedCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAEPAXI@Z ; btSoftBodyConcaveCollisionAlgorithm::SwappedCreateFunc::`vftable'
	DD	FLAT:?CreateCollisionAlgorithm@SwappedCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAEPAVbtCollisionAlgorithm@@AAUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0SwappedCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0SwappedCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@QAE@XZ PROC ; btSoftBodyConcaveCollisionAlgorithm::SwappedCreateFunc::SwappedCreateFunc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0btCollisionAlgorithmCreateFunc@@QAE@XZ ; btCollisionAlgorithmCreateFunc::btCollisionAlgorithmCreateFunc
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SwappedCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0SwappedCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@QAE@XZ ENDP ; btSoftBodyConcaveCollisionAlgorithm::SwappedCreateFunc::SwappedCreateFunc
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?CreateCollisionAlgorithm@SwappedCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAEPAVbtCollisionAlgorithm@@AAUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1@Z
_TEXT	SEGMENT
tv84 = -16						; size = 4
$T14100 = -12						; size = 4
_mem$ = -8						; size = 4
_this$ = -4						; size = 4
_ci$ = 8						; size = 4
_body0Wrap$ = 12					; size = 4
_body1Wrap$ = 16					; size = 4
?CreateCollisionAlgorithm@SwappedCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAEPAVbtCollisionAlgorithm@@AAUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1@Z PROC ; btSoftBodyConcaveCollisionAlgorithm::SwappedCreateFunc::CreateCollisionAlgorithm, COMDAT
; _this$ = ecx
; Line 147
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 148
	mov	esi, esp
	push	176					; 000000b0H
	mov	eax, DWORD PTR _ci$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _ci$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _mem$[ebp], eax
; Line 149
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	push	176					; 000000b0H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T14100[ebp], eax
	cmp	DWORD PTR $T14100[ebp], 0
	je	SHORT $LN3@CreateColl@4
	push	1
	mov	edx, DWORD PTR _body1Wrap$[ebp]
	push	edx
	mov	eax, DWORD PTR _body0Wrap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ci$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T14100[ebp]
	call	??0btSoftBodyConcaveCollisionAlgorithm@@QAE@ABUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1_N@Z ; btSoftBodyConcaveCollisionAlgorithm::btSoftBodyConcaveCollisionAlgorithm
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN4@CreateColl@4
$LN3@CreateColl@4:
	mov	DWORD PTR tv84[ebp], 0
$LN4@CreateColl@4:
	mov	eax, DWORD PTR tv84[ebp]
; Line 150
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?CreateCollisionAlgorithm@SwappedCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAEPAVbtCollisionAlgorithm@@AAUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@1@Z ENDP ; btSoftBodyConcaveCollisionAlgorithm::SwappedCreateFunc::CreateCollisionAlgorithm
_TEXT	ENDS
PUBLIC	??1btPoolAllocator@@QAE@XZ			; btPoolAllocator::~btPoolAllocator
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GbtPoolAllocator@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GbtPoolAllocator@@QAEPAXI@Z PROC			; btPoolAllocator::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1btPoolAllocator@@QAE@XZ		; btPoolAllocator::~btPoolAllocator
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GbtPoolAllocator@@QAEPAXI@Z ENDP			; btPoolAllocator::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1btPoolAllocator@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1btPoolAllocator@@QAE@XZ PROC				; btPoolAllocator::~btPoolAllocator, COMDAT
; _this$ = ecx
; File d:\專題\自建專案\自建專案\src\linearmath\btpoolallocator.h
; Line 51
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 52
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	?btAlignedFreeInternal@@YAXPAX@Z	; btAlignedFreeInternal
	add	esp, 4
; Line 53
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1btPoolAllocator@@QAE@XZ ENDP				; btPoolAllocator::~btPoolAllocator
_TEXT	ENDS
PUBLIC	??1CreateFunc@btSoftSoftCollisionAlgorithm@@UAE@XZ ; btSoftSoftCollisionAlgorithm::CreateFunc::~CreateFunc
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCreateFunc@btSoftSoftCollisionAlgorithm@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCreateFunc@btSoftSoftCollisionAlgorithm@@UAEPAXI@Z PROC ; btSoftSoftCollisionAlgorithm::CreateFunc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CreateFunc@btSoftSoftCollisionAlgorithm@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCreateFunc@btSoftSoftCollisionAlgorithm@@UAEPAXI@Z ENDP ; btSoftSoftCollisionAlgorithm::CreateFunc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CreateFunc@btSoftRigidCollisionAlgorithm@@UAE@XZ ; btSoftRigidCollisionAlgorithm::CreateFunc::~CreateFunc
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCreateFunc@btSoftRigidCollisionAlgorithm@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCreateFunc@btSoftRigidCollisionAlgorithm@@UAEPAXI@Z PROC ; btSoftRigidCollisionAlgorithm::CreateFunc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CreateFunc@btSoftRigidCollisionAlgorithm@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCreateFunc@btSoftRigidCollisionAlgorithm@@UAEPAXI@Z ENDP ; btSoftRigidCollisionAlgorithm::CreateFunc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAE@XZ ; btSoftBodyConcaveCollisionAlgorithm::CreateFunc::~CreateFunc
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAEPAXI@Z PROC ; btSoftBodyConcaveCollisionAlgorithm::CreateFunc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAEPAXI@Z ENDP ; btSoftBodyConcaveCollisionAlgorithm::CreateFunc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1SwappedCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAE@XZ ; btSoftBodyConcaveCollisionAlgorithm::SwappedCreateFunc::~SwappedCreateFunc
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GSwappedCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GSwappedCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAEPAXI@Z PROC ; btSoftBodyConcaveCollisionAlgorithm::SwappedCreateFunc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SwappedCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSwappedCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAEPAXI@Z ENDP ; btSoftBodyConcaveCollisionAlgorithm::SwappedCreateFunc::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CreateFunc@btSoftSoftCollisionAlgorithm@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CreateFunc@btSoftSoftCollisionAlgorithm@@UAE@XZ PROC	; btSoftSoftCollisionAlgorithm::CreateFunc::~CreateFunc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1btCollisionAlgorithmCreateFunc@@UAE@XZ ; btCollisionAlgorithmCreateFunc::~btCollisionAlgorithmCreateFunc
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CreateFunc@btSoftSoftCollisionAlgorithm@@UAE@XZ ENDP	; btSoftSoftCollisionAlgorithm::CreateFunc::~CreateFunc
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CreateFunc@btSoftRigidCollisionAlgorithm@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CreateFunc@btSoftRigidCollisionAlgorithm@@UAE@XZ PROC ; btSoftRigidCollisionAlgorithm::CreateFunc::~CreateFunc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1btCollisionAlgorithmCreateFunc@@UAE@XZ ; btCollisionAlgorithmCreateFunc::~btCollisionAlgorithmCreateFunc
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CreateFunc@btSoftRigidCollisionAlgorithm@@UAE@XZ ENDP ; btSoftRigidCollisionAlgorithm::CreateFunc::~CreateFunc
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAE@XZ PROC ; btSoftBodyConcaveCollisionAlgorithm::CreateFunc::~CreateFunc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1btCollisionAlgorithmCreateFunc@@UAE@XZ ; btCollisionAlgorithmCreateFunc::~btCollisionAlgorithmCreateFunc
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAE@XZ ENDP ; btSoftBodyConcaveCollisionAlgorithm::CreateFunc::~CreateFunc
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1SwappedCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1SwappedCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAE@XZ PROC ; btSoftBodyConcaveCollisionAlgorithm::SwappedCreateFunc::~SwappedCreateFunc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1btCollisionAlgorithmCreateFunc@@UAE@XZ ; btCollisionAlgorithmCreateFunc::~btCollisionAlgorithmCreateFunc
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1SwappedCreateFunc@btSoftBodyConcaveCollisionAlgorithm@@UAE@XZ ENDP ; btSoftBodyConcaveCollisionAlgorithm::SwappedCreateFunc::~SwappedCreateFunc
_TEXT	ENDS
EXTRN	??1btDefaultCollisionConfiguration@@UAE@XZ:PROC	; btDefaultCollisionConfiguration::~btDefaultCollisionConfiguration
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1btSoftBodyRigidBodyCollisionConfiguration@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1btSoftBodyRigidBodyCollisionConfiguration@@UAE@XZ PROC ; btSoftBodyRigidBodyCollisionConfiguration::~btSoftBodyRigidBodyCollisionConfiguration, COMDAT
; _this$ = ecx
; File d:\專題\自建專案\自建專案\src\bulletsoftbody\btsoftbodyrigidbodycollisionconfiguration.cpp
; Line 76
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7btSoftBodyRigidBodyCollisionConfiguration@@6B@
; Line 77
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 78
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	push	edx
	call	?btAlignedFreeInternal@@YAXPAX@Z	; btAlignedFreeInternal
	add	esp, 4
; Line 80
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 81
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	push	edx
	call	?btAlignedFreeInternal@@YAXPAX@Z	; btAlignedFreeInternal
	add	esp, 4
; Line 83
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 84
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	push	edx
	call	?btAlignedFreeInternal@@YAXPAX@Z	; btAlignedFreeInternal
	add	esp, 4
; Line 87
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+104]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 88
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	push	edx
	call	?btAlignedFreeInternal@@YAXPAX@Z	; btAlignedFreeInternal
	add	esp, 4
; Line 90
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 91
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	call	?btAlignedFreeInternal@@YAXPAX@Z	; btAlignedFreeInternal
	add	esp, 4
; Line 93
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1btDefaultCollisionConfiguration@@UAE@XZ ; btDefaultCollisionConfiguration::~btDefaultCollisionConfiguration
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1btSoftBodyRigidBodyCollisionConfiguration@@UAE@XZ ENDP ; btSoftBodyRigidBodyCollisionConfiguration::~btSoftBodyRigidBodyCollisionConfiguration
_TEXT	ENDS
PUBLIC	?isConcave@btBroadphaseProxy@@SA_NH@Z		; btBroadphaseProxy::isConcave
PUBLIC	?isConvex@btBroadphaseProxy@@SA_NH@Z		; btBroadphaseProxy::isConvex
EXTRN	?getCollisionAlgorithmCreateFunc@btDefaultCollisionConfiguration@@UAEPAUbtCollisionAlgorithmCreateFunc@@HH@Z:PROC ; btDefaultCollisionConfiguration::getCollisionAlgorithmCreateFunc
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?getCollisionAlgorithmCreateFunc@btSoftBodyRigidBodyCollisionConfiguration@@UAEPAUbtCollisionAlgorithmCreateFunc@@HH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_proxyType0$ = 8					; size = 4
_proxyType1$ = 12					; size = 4
?getCollisionAlgorithmCreateFunc@btSoftBodyRigidBodyCollisionConfiguration@@UAEPAUbtCollisionAlgorithmCreateFunc@@HH@Z PROC ; btSoftBodyRigidBodyCollisionConfiguration::getCollisionAlgorithmCreateFunc, COMDAT
; _this$ = ecx
; Line 97
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 101
	cmp	DWORD PTR _proxyType0$[ebp], 32		; 00000020H
	jne	SHORT $LN5@getCollisi
	cmp	DWORD PTR _proxyType1$[ebp], 32		; 00000020H
	jne	SHORT $LN5@getCollisi
; Line 103
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+92]
	jmp	$LN6@getCollisi
$LN5@getCollisi:
; Line 107
	cmp	DWORD PTR _proxyType0$[ebp], 32		; 00000020H
	jne	SHORT $LN4@getCollisi
	mov	ecx, DWORD PTR _proxyType1$[ebp]
	push	ecx
	call	?isConvex@btBroadphaseProxy@@SA_NH@Z	; btBroadphaseProxy::isConvex
	add	esp, 4
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@getCollisi
; Line 109
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+96]
	jmp	SHORT $LN6@getCollisi
$LN4@getCollisi:
; Line 113
	mov	ecx, DWORD PTR _proxyType0$[ebp]
	push	ecx
	call	?isConvex@btBroadphaseProxy@@SA_NH@Z	; btBroadphaseProxy::isConvex
	add	esp, 4
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@getCollisi
	cmp	DWORD PTR _proxyType1$[ebp], 32		; 00000020H
	jne	SHORT $LN3@getCollisi
; Line 115
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+100]
	jmp	SHORT $LN6@getCollisi
$LN3@getCollisi:
; Line 120
	cmp	DWORD PTR _proxyType0$[ebp], 32		; 00000020H
	jne	SHORT $LN2@getCollisi
	mov	ecx, DWORD PTR _proxyType1$[ebp]
	push	ecx
	call	?isConcave@btBroadphaseProxy@@SA_NH@Z	; btBroadphaseProxy::isConcave
	add	esp, 4
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@getCollisi
; Line 122
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+104]
	jmp	SHORT $LN6@getCollisi
$LN2@getCollisi:
; Line 126
	mov	ecx, DWORD PTR _proxyType0$[ebp]
	push	ecx
	call	?isConcave@btBroadphaseProxy@@SA_NH@Z	; btBroadphaseProxy::isConcave
	add	esp, 4
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@getCollisi
	cmp	DWORD PTR _proxyType1$[ebp], 32		; 00000020H
	jne	SHORT $LN1@getCollisi
; Line 128
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+108]
	jmp	SHORT $LN6@getCollisi
$LN1@getCollisi:
; Line 133
	mov	ecx, DWORD PTR _proxyType1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _proxyType0$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getCollisionAlgorithmCreateFunc@btDefaultCollisionConfiguration@@UAEPAUbtCollisionAlgorithmCreateFunc@@HH@Z ; btDefaultCollisionConfiguration::getCollisionAlgorithmCreateFunc
$LN6@getCollisi:
; Line 134
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getCollisionAlgorithmCreateFunc@btSoftBodyRigidBodyCollisionConfiguration@@UAEPAUbtCollisionAlgorithmCreateFunc@@HH@Z ENDP ; btSoftBodyRigidBodyCollisionConfiguration::getCollisionAlgorithmCreateFunc
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?isConvex@btBroadphaseProxy@@SA_NH@Z
_TEXT	SEGMENT
_proxyType$ = 8						; size = 4
?isConvex@btBroadphaseProxy@@SA_NH@Z PROC		; btBroadphaseProxy::isConvex, COMDAT
; File d:\專題\自建專案\自建專案\src\bulletcollision\broadphasecollision\btbroadphaseproxy.h
; Line 140
	push	ebp
	mov	ebp, esp
; Line 141
	xor	eax, eax
	cmp	DWORD PTR _proxyType$[ebp], 20		; 00000014H
	setl	al
; Line 142
	pop	ebp
	ret	0
?isConvex@btBroadphaseProxy@@SA_NH@Z ENDP		; btBroadphaseProxy::isConvex
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?isConcave@btBroadphaseProxy@@SA_NH@Z
_TEXT	SEGMENT
tv66 = -4						; size = 4
_proxyType$ = 8						; size = 4
?isConcave@btBroadphaseProxy@@SA_NH@Z PROC		; btBroadphaseProxy::isConcave, COMDAT
; Line 150
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 152
	cmp	DWORD PTR _proxyType$[ebp], 20		; 00000014H
	jle	SHORT $LN3@isConcave
	cmp	DWORD PTR _proxyType$[ebp], 30		; 0000001eH
	jge	SHORT $LN3@isConcave
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@isConcave
$LN3@isConcave:
	mov	DWORD PTR tv66[ebp], 0
$LN4@isConcave:
	mov	al, BYTE PTR tv66[ebp]
; Line 153
	mov	esp, ebp
	pop	ebp
	ret	0
?isConcave@btBroadphaseProxy@@SA_NH@Z ENDP		; btBroadphaseProxy::isConcave
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$btMax@H@@YAABHABH0@Z
_TEXT	SEGMENT
tv65 = -8						; size = 4
$T14135 = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??$btMax@H@@YAABHABH0@Z PROC				; btMax<int>, COMDAT
; File d:\專題\自建專案\自建專案\src\linearmath\btminmax.h
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 31
	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jle	SHORT $LN3@btMax
	mov	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@btMax
$LN3@btMax:
	mov	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
$LN4@btMax:
	mov	edx, DWORD PTR tv65[ebp]
	mov	DWORD PTR $T14135[ebp], edx
	mov	eax, DWORD PTR $T14135[ebp]
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
??$btMax@H@@YAABHABH0@Z ENDP				; btMax<int>
_TEXT	ENDS
END
