; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\專題\自建專案\自建專案\src\BulletSoftBody\btSoftRigidCollisionAlgorithm.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_btNanMask DD	07f800001H
_btInfinityMask DD 07f800000H
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	push	esi
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	esi, esp
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR ___t$[ebp]
	add	ecx, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], ecx
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??_7btSoftRigidCollisionAlgorithm@@6B@		; btSoftRigidCollisionAlgorithm::`vftable'
PUBLIC	??0btSoftRigidCollisionAlgorithm@@QAE@PAVbtPersistentManifold@@ABUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@2_N@Z ; btSoftRigidCollisionAlgorithm::btSoftRigidCollisionAlgorithm
PUBLIC	?processCollision@btSoftRigidCollisionAlgorithm@@UAEXPBUbtCollisionObjectWrapper@@0ABUbtDispatcherInfo@@PAVbtManifoldResult@@@Z ; btSoftRigidCollisionAlgorithm::processCollision
PUBLIC	?calculateTimeOfImpact@btSoftRigidCollisionAlgorithm@@UAEMPAVbtCollisionObject@@0ABUbtDispatcherInfo@@PAVbtManifoldResult@@@Z ; btSoftRigidCollisionAlgorithm::calculateTimeOfImpact
PUBLIC	?getAllContactManifolds@btSoftRigidCollisionAlgorithm@@UAEXAAV?$btAlignedObjectArray@PAVbtPersistentManifold@@@@@Z ; btSoftRigidCollisionAlgorithm::getAllContactManifolds
EXTRN	??0btCollisionAlgorithm@@QAE@ABUbtCollisionAlgorithmConstructionInfo@@@Z:PROC ; btCollisionAlgorithm::btCollisionAlgorithm
EXTRN	??_EbtSoftRigidCollisionAlgorithm@@UAEPAXI@Z:PROC ; btSoftRigidCollisionAlgorithm::`vector deleting destructor'
;	COMDAT ??_7btSoftRigidCollisionAlgorithm@@6B@
; File d:\專題\自建專案\自建專案\src\bulletsoftbody\btsoftrigidcollisionalgorithm.cpp
CONST	SEGMENT
??_7btSoftRigidCollisionAlgorithm@@6B@ DD FLAT:??_EbtSoftRigidCollisionAlgorithm@@UAEPAXI@Z ; btSoftRigidCollisionAlgorithm::`vftable'
	DD	FLAT:?processCollision@btSoftRigidCollisionAlgorithm@@UAEXPBUbtCollisionObjectWrapper@@0ABUbtDispatcherInfo@@PAVbtManifoldResult@@@Z
	DD	FLAT:?calculateTimeOfImpact@btSoftRigidCollisionAlgorithm@@UAEMPAVbtCollisionObject@@0ABUbtDispatcherInfo@@PAVbtManifoldResult@@@Z
	DD	FLAT:?getAllContactManifolds@btSoftRigidCollisionAlgorithm@@UAEXAAV?$btAlignedObjectArray@PAVbtPersistentManifold@@@@@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0btSoftRigidCollisionAlgorithm@@QAE@PAVbtPersistentManifold@@ABUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@2_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
_ci$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
_isSwapped$ = 24					; size = 1
??0btSoftRigidCollisionAlgorithm@@QAE@PAVbtPersistentManifold@@ABUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@2_N@Z PROC ; btSoftRigidCollisionAlgorithm::btSoftRigidCollisionAlgorithm, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ci$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0btCollisionAlgorithm@@QAE@ABUbtCollisionAlgorithmConstructionInfo@@@Z ; btCollisionAlgorithm::btCollisionAlgorithm
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7btSoftRigidCollisionAlgorithm@@6B@
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR _isSwapped$[ebp]
	mov	BYTE PTR [edx+16], al
; Line 36
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??0btSoftRigidCollisionAlgorithm@@QAE@PAVbtPersistentManifold@@ABUbtCollisionAlgorithmConstructionInfo@@PBUbtCollisionObjectWrapper@@2_N@Z ENDP ; btSoftRigidCollisionAlgorithm::btSoftRigidCollisionAlgorithm
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?getAllContactManifolds@btSoftRigidCollisionAlgorithm@@UAEXAAV?$btAlignedObjectArray@PAVbtPersistentManifold@@@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_manifoldArray$ = 8					; size = 4
?getAllContactManifolds@btSoftRigidCollisionAlgorithm@@UAEXAAV?$btAlignedObjectArray@PAVbtPersistentManifold@@@@@Z PROC ; btSoftRigidCollisionAlgorithm::getAllContactManifolds, COMDAT
; _this$ = ecx
; File d:\專題\自建專案\自建專案\src\bulletsoftbody\btsoftrigidcollisionalgorithm.h
; Line 51
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 53
	mov	esp, ebp
	pop	ebp
	ret	4
?getAllContactManifolds@btSoftRigidCollisionAlgorithm@@UAEXAAV?$btAlignedObjectArray@PAVbtPersistentManifold@@@@@Z ENDP ; btSoftRigidCollisionAlgorithm::getAllContactManifolds
_TEXT	ENDS
PUBLIC	??1btSoftRigidCollisionAlgorithm@@UAE@XZ	; btSoftRigidCollisionAlgorithm::~btSoftRigidCollisionAlgorithm
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GbtSoftRigidCollisionAlgorithm@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GbtSoftRigidCollisionAlgorithm@@UAEPAXI@Z PROC	; btSoftRigidCollisionAlgorithm::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1btSoftRigidCollisionAlgorithm@@UAE@XZ ; btSoftRigidCollisionAlgorithm::~btSoftRigidCollisionAlgorithm
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GbtSoftRigidCollisionAlgorithm@@UAEPAXI@Z ENDP	; btSoftRigidCollisionAlgorithm::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1btCollisionAlgorithm@@UAE@XZ			; btCollisionAlgorithm::~btCollisionAlgorithm
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1btSoftRigidCollisionAlgorithm@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1btSoftRigidCollisionAlgorithm@@UAE@XZ PROC		; btSoftRigidCollisionAlgorithm::~btSoftRigidCollisionAlgorithm, COMDAT
; _this$ = ecx
; File d:\專題\自建專案\自建專案\src\bulletsoftbody\btsoftrigidcollisionalgorithm.cpp
; Line 40
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7btSoftRigidCollisionAlgorithm@@6B@
; Line 51
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1btCollisionAlgorithm@@UAE@XZ		; btCollisionAlgorithm::~btCollisionAlgorithm
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1btSoftRigidCollisionAlgorithm@@UAE@XZ ENDP		; btSoftRigidCollisionAlgorithm::~btSoftRigidCollisionAlgorithm
_TEXT	ENDS
PUBLIC	??_7btCollisionAlgorithm@@6B@			; btCollisionAlgorithm::`vftable'
EXTRN	??_EbtCollisionAlgorithm@@UAEPAXI@Z:PROC	; btCollisionAlgorithm::`vector deleting destructor'
EXTRN	__purecall:PROC
;	COMDAT ??_7btCollisionAlgorithm@@6B@
; File d:\專題\自建專案\自建專案\src\bulletcollision\broadphasecollision\btcollisionalgorithm.h
CONST	SEGMENT
??_7btCollisionAlgorithm@@6B@ DD FLAT:??_EbtCollisionAlgorithm@@UAEPAXI@Z ; btCollisionAlgorithm::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??1btCollisionAlgorithm@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1btCollisionAlgorithm@@UAE@XZ PROC			; btCollisionAlgorithm::~btCollisionAlgorithm, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7btCollisionAlgorithm@@6B@
	mov	esp, ebp
	pop	ebp
	ret	0
??1btCollisionAlgorithm@@UAE@XZ ENDP			; btCollisionAlgorithm::~btCollisionAlgorithm
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??_GbtCollisionAlgorithm@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GbtCollisionAlgorithm@@UAEPAXI@Z PROC		; btCollisionAlgorithm::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1btCollisionAlgorithm@@UAE@XZ		; btCollisionAlgorithm::~btCollisionAlgorithm
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GbtCollisionAlgorithm@@UAEPAXI@Z ENDP		; btCollisionAlgorithm::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?getSoftBodySolver@btSoftBody@@QAEPAVbtSoftBodySolver@@XZ ; btSoftBody::getSoftBodySolver
PUBLIC	?size@?$btAlignedObjectArray@PBVbtCollisionObject@@@@QBEHXZ ; btAlignedObjectArray<btCollisionObject const *>::size
PUBLIC	?findLinearSearch@?$btAlignedObjectArray@PBVbtCollisionObject@@@@QBEHABQBVbtCollisionObject@@@Z ; btAlignedObjectArray<btCollisionObject const *>::findLinearSearch
PUBLIC	?getCollisionObject@btCollisionObjectWrapper@@QBEPBVbtCollisionObject@@XZ ; btCollisionObjectWrapper::getCollisionObject
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?processCollision@btSoftRigidCollisionAlgorithm@@UAEXPBUbtCollisionObjectWrapper@@0ABUbtDispatcherInfo@@PAVbtManifoldResult@@@Z
_TEXT	SEGMENT
tv129 = -28						; size = 4
tv83 = -24						; size = 4
tv79 = -20						; size = 4
$T20941 = -16						; size = 4
_rigidCollisionObjectWrap$ = -12			; size = 4
_softBody$ = -8						; size = 4
_this$ = -4						; size = 4
_body0Wrap$ = 8						; size = 4
_body1Wrap$ = 12					; size = 4
_dispatchInfo$ = 16					; size = 4
_resultOut$ = 20					; size = 4
?processCollision@btSoftRigidCollisionAlgorithm@@UAEXPBUbtCollisionObjectWrapper@@0ABUbtDispatcherInfo@@PAVbtManifoldResult@@@Z PROC ; btSoftRigidCollisionAlgorithm::processCollision, COMDAT
; _this$ = ecx
; File d:\專題\自建專案\自建專案\src\bulletsoftbody\btsoftrigidcollisionalgorithm.cpp
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 63
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+16]
	test	ecx, ecx
	je	SHORT $LN4@processCol
	mov	ecx, DWORD PTR _body1Wrap$[ebp]
	call	?getCollisionObject@btCollisionObjectWrapper@@QBEPBVbtCollisionObject@@XZ ; btCollisionObjectWrapper::getCollisionObject
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN5@processCol
$LN4@processCol:
	mov	ecx, DWORD PTR _body0Wrap$[ebp]
	call	?getCollisionObject@btCollisionObjectWrapper@@QBEPBVbtCollisionObject@@XZ ; btCollisionObjectWrapper::getCollisionObject
	mov	DWORD PTR tv79[ebp], eax
$LN5@processCol:
	mov	edx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _softBody$[ebp], edx
; Line 64
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+16]
	test	ecx, ecx
	je	SHORT $LN6@processCol
	mov	edx, DWORD PTR _body0Wrap$[ebp]
	mov	DWORD PTR tv83[ebp], edx
	jmp	SHORT $LN7@processCol
$LN6@processCol:
	mov	eax, DWORD PTR _body1Wrap$[ebp]
	mov	DWORD PTR tv83[ebp], eax
$LN7@processCol:
	mov	ecx, DWORD PTR tv83[ebp]
	mov	DWORD PTR _rigidCollisionObjectWrap$[ebp], ecx
; Line 66
	mov	ecx, DWORD PTR _rigidCollisionObjectWrap$[ebp]
	call	?getCollisionObject@btCollisionObjectWrapper@@QBEPBVbtCollisionObject@@XZ ; btCollisionObjectWrapper::getCollisionObject
	mov	DWORD PTR $T20941[ebp], eax
	lea	edx, DWORD PTR $T20941[ebp]
	push	edx
	mov	ecx, DWORD PTR _softBody$[ebp]
	add	ecx, 288				; 00000120H
	call	?findLinearSearch@?$btAlignedObjectArray@PBVbtCollisionObject@@@@QBEHABQBVbtCollisionObject@@@Z ; btAlignedObjectArray<btCollisionObject const *>::findLinearSearch
	mov	esi, eax
	mov	ecx, DWORD PTR _softBody$[ebp]
	add	ecx, 288				; 00000120H
	call	?size@?$btAlignedObjectArray@PBVbtCollisionObject@@@@QBEHXZ ; btAlignedObjectArray<btCollisionObject const *>::size
	cmp	esi, eax
	jne	SHORT $LN2@processCol
; Line 68
	mov	ecx, DWORD PTR _softBody$[ebp]
	call	?getSoftBodySolver@btSoftBody@@QAEPAVbtSoftBodySolver@@XZ ; btSoftBody::getSoftBodySolver
	mov	DWORD PTR tv129[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _rigidCollisionObjectWrap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _softBody$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv129[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv129[ebp]
	mov	edx, DWORD PTR [eax+36]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@processCol:
; Line 72
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?processCollision@btSoftRigidCollisionAlgorithm@@UAEXPBUbtCollisionObjectWrapper@@0ABUbtDispatcherInfo@@PAVbtManifoldResult@@@Z ENDP ; btSoftRigidCollisionAlgorithm::processCollision
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?getCollisionObject@btCollisionObjectWrapper@@QBEPBVbtCollisionObject@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getCollisionObject@btCollisionObjectWrapper@@QBEPBVbtCollisionObject@@XZ PROC ; btCollisionObjectWrapper::getCollisionObject, COMDAT
; _this$ = ecx
; File d:\專題\自建專案\自建專案\src\bulletcollision\collisiondispatch\btcollisionobjectwrapper.h
; Line 39
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?getCollisionObject@btCollisionObjectWrapper@@QBEPBVbtCollisionObject@@XZ ENDP ; btCollisionObjectWrapper::getCollisionObject
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?getSoftBodySolver@btSoftBody@@QAEPAVbtSoftBodySolver@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getSoftBodySolver@btSoftBody@@QAEPAVbtSoftBodySolver@@XZ PROC ; btSoftBody::getSoftBodySolver, COMDAT
; _this$ = ecx
; File d:\專題\自建專案\自建專案\src\bulletsoftbody\btsoftbody.h
; Line 920
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 921
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+308]
; Line 922
	mov	esp, ebp
	pop	ebp
	ret	0
?getSoftBodySolver@btSoftBody@@QAEPAVbtSoftBodySolver@@XZ ENDP ; btSoftBody::getSoftBodySolver
_TEXT	ENDS
PUBLIC	__real@3f800000
EXTRN	__fltused:DWORD
;	COMDAT __real@3f800000
; File d:\專題\自建專案\自建專案\src\bulletsoftbody\btsoftrigidcollisionalgorithm.cpp
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?calculateTimeOfImpact@btSoftRigidCollisionAlgorithm@@UAEMPAVbtCollisionObject@@0ABUbtDispatcherInfo@@PAVbtManifoldResult@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_col0$ = 8						; size = 4
_col1$ = 12						; size = 4
_dispatchInfo$ = 16					; size = 4
_resultOut$ = 20					; size = 4
?calculateTimeOfImpact@btSoftRigidCollisionAlgorithm@@UAEMPAVbtCollisionObject@@0ABUbtDispatcherInfo@@PAVbtManifoldResult@@@Z PROC ; btSoftRigidCollisionAlgorithm::calculateTimeOfImpact, COMDAT
; _this$ = ecx
; Line 75
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 82
	fld1
; Line 83
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?calculateTimeOfImpact@btSoftRigidCollisionAlgorithm@@UAEMPAVbtCollisionObject@@0ABUbtDispatcherInfo@@PAVbtManifoldResult@@@Z ENDP ; btSoftRigidCollisionAlgorithm::calculateTimeOfImpact
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?size@?$btAlignedObjectArray@PBVbtCollisionObject@@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$btAlignedObjectArray@PBVbtCollisionObject@@@@QBEHXZ PROC ; btAlignedObjectArray<btCollisionObject const *>::size, COMDAT
; _this$ = ecx
; File d:\專題\自建專案\自建專案\src\linearmath\btalignedobjectarray.h
; Line 150
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 151
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 152
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$btAlignedObjectArray@PBVbtCollisionObject@@@@QBEHXZ ENDP ; btAlignedObjectArray<btCollisionObject const *>::size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?findLinearSearch@?$btAlignedObjectArray@PBVbtCollisionObject@@@@QBEHABQBVbtCollisionObject@@@Z
_TEXT	SEGMENT
_i$ = -12						; size = 4
_index$ = -8						; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
?findLinearSearch@?$btAlignedObjectArray@PBVbtCollisionObject@@@@QBEHABQBVbtCollisionObject@@@Z PROC ; btAlignedObjectArray<btCollisionObject const *>::findLinearSearch, COMDAT
; _this$ = ecx
; Line 466
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 467
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$btAlignedObjectArray@PBVbtCollisionObject@@@@QBEHXZ ; btAlignedObjectArray<btCollisionObject const *>::size
	mov	DWORD PTR _index$[ebp], eax
; Line 470
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@findLinear
$LN3@findLinear:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@findLinear:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$btAlignedObjectArray@PBVbtCollisionObject@@@@QBEHXZ ; btAlignedObjectArray<btCollisionObject const *>::size
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN2@findLinear
; Line 472
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _key$[ebp]
	mov	edx, DWORD PTR [edx+eax*4]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN1@findLinear
; Line 474
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _index$[ebp], eax
; Line 475
	jmp	SHORT $LN2@findLinear
$LN1@findLinear:
; Line 477
	jmp	SHORT $LN3@findLinear
$LN2@findLinear:
; Line 478
	mov	eax, DWORD PTR _index$[ebp]
; Line 479
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?findLinearSearch@?$btAlignedObjectArray@PBVbtCollisionObject@@@@QBEHABQBVbtCollisionObject@@@Z ENDP ; btAlignedObjectArray<btCollisionObject const *>::findLinearSearch
_TEXT	ENDS
END
